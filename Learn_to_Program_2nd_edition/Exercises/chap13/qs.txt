13.1 A Few Things to Try
• Extend the built-in classes. 
How about making your shuffle method on page 75 an array method? 
Or how about making factorial an integer method? 
4.to_roman, anyone? 
In each case, remember to use self to access the object the method is being called on (the 4 in 4.to_roman).

13.6 A Few More Things to Try
• Orange tree. 
Make an OrangeTree class that has a height method that returns its height and a one_year_passes method that, when called, ages the tree one year. 
Each year the tree grows taller (however much you think an orange tree should grow in a year), and after some number of years (again, your call) the tree should die. 
For the first few years, it should not produce fruit, but after a while it should, and I guess that older trees produce more each year than younger trees...whatever you think makes the most sense. And, of course, you should be able to count_the_oranges (which returns the number of oranges on the tree) and pick_an_orange (which reduces the @orange_count by 1 and returns a string telling you how delicious the orange was, or else it just tells you that there are no more oranges to pick this year). Make sure any oranges you don’t pick one year fall off before the next year.

• Interactive baby dragon. 
Write a program that lets you enter commands such as feed and walk and calls those methods on your dragon. 
Of course, since you are inputting just strings, you will need some sort of method dispatch, where your program checks which string was entered and then calls the appropriate method.