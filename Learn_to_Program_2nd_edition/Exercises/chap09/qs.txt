A Few Things to Try

Ex.1
• Improved ask method. 
That ask method I showed you was OK, but I bet you could do better. Try to clean it up by removing the answer variable. 
You’ll have to use return to exit from the loop. (Well, it will get you out of the whole method, but it will get you out of the loop in the process.) 
How do you like the resulting method? I usually try to avoid using return (a personal preference), but I might make an exception here.

Ex.2
• Old-school Roman numerals. 
In the early days of Roman numerals, the Romans didn’t bother with any of this new-fangled subtraction “IX” nonsense. 
No sir, it was straight addition, biggest to littlest—so 9 was written “VIIII,” and so on. 
Write a method that when passed an integer between 1 and 3000 (or so) returns a string containing the proper old- school Roman numeral. 
In other words, old_roman_numeral 4 should return 'IIII'. Make sure to test your method on a bunch of different numbers. 
Hint: Use the integer division and modulus methods on page 32.
For reference, these are the values of the letters used:
I = 1 V = 5 X = 10 L = 50 C = 100 D = 500 M = 1000

Ex.3
• “Modern” Roman numerals. 
Eventually, someone thought it would be ter- ribly clever if putting a smaller number before a larger one meant you had to subtract the smaller one. 
As a result of this development, you must now suffer. 
Rewrite your previous method to return the new-style Roman numerals so when someone calls roman_numeral 4, it should return 'IV'.